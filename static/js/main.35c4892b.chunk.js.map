{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","components/utils/dataApi.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Notification/Notification.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/SearchForm/SearchForm.module.css"],"names":["module","exports","query","page","axios","get","then","response","data","hits","Searchbar","state","inputValue","handleChange","value","target","setState","handleSubmit","e","preventDefault","props","onSubmit","this","className","style","styles","SearchForm","type","SearchFormButton","SearchFormButtonLabel","onChange","SearchFormInput","autocomplete","autofocus","placeholder","Component","ImageGalleryItem","webformatURL","largeImageURL","getLargeImg","console","log","src","onClick","alt","ImageGalleryItemImage","ImageGallery","map","id","Button","fetchData","Notification","message","notification","defaultProps","Loader","spinner","color","height","width","timeout","React","Modal","handleKeyDown","event","code","closeModal","window","addEventListener","removeEventListener","Overlay","App","loading","error","dataApi","result","prevState","catch","finally","searchQuery","name","image","prevProps","prevQuery","nextQuery","prevPage","newPage","scrollTo","top","document","documentElement","scrollHeight","behavior","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.35c4892b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__257lC\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1W41C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3bzPg\",\"Modal\":\"Modal_Modal__2IMTL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1xPxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__AXftl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3bYze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1KgFq\"};","import axios from 'axios';\r\n\r\nconst fetchDataWithQuery = (query, page) => {\r\n  const TOKEN = '18971194-a8d2923dd41b567bba7e5ae77';\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${TOKEN}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchDataWithQuery };\r\n","import React, { Component } from 'react';\r\nimport style from '../Searchbar/Searchbar.module.css';\r\nimport styles from '../SearchForm/SearchForm.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n  static propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value } = target;\r\n    this.setState({\r\n      inputValue: value,\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: '' });\r\n  };\r\n\r\n  render() {\r\n    const { inputValue } = this.state;\r\n    return (\r\n      <header className={style.Searchbar}>\r\n        <form onSubmit={this.handleSubmit} className={styles.SearchForm}>\r\n          <button type=\"submit\" className={styles.SearchFormButton}>\r\n            <span className={styles.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={inputValue}\r\n            onChange={this.handleChange}\r\n            className={styles.SearchFormInput}\r\n            type=\"text\"\r\n            autocomplete=\"off\"\r\n            autofocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport styles from '../ImageGalleryItem/ImageGalleryItem.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, getLargeImg }) => {\r\n  console.log(webformatURL);\r\n  return (\r\n    <li className={styles.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        onClick={() => getLargeImg(largeImageURL)}\r\n        alt=\"\"\r\n        className={styles.ImageGalleryItemImage}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n  getLargeImg: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport styles from '../ImageGallery/ImageGallery.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGallery = ({ data, getLargeImg }) => {\r\n  return (\r\n    <ul className={styles.ImageGallery}>\r\n      {data.map(data => (\r\n        <ImageGalleryItem\r\n          key={data.id}\r\n          webformatURL={data.webformatURL}\r\n          largeImageURL={data.largeImageURL}\r\n          getLargeImg={getLargeImg}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  getLargeImg: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport styles from '../Button/Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ fetchData }) => {\r\n  return (\r\n    <button type=\"button\" onClick={fetchData} className={styles.Button}>\r\n      Load more\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  fetchData: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport styles from '../Notification/Notification.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <h2 className={styles.notification}>{message}</h2>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nNotification.defaultProps = {\r\n  message: 'Oops, something went wrong!',\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport Spinner from 'react-loader-spinner';\r\nimport styles from '../Loader/Loader.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Loader extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.spinner}>\r\n        <Spinner\r\n          type=\"Puff\"\r\n          color=\"#00BFFF\"\r\n          height={100}\r\n          width={100}\r\n          timeout={3000}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from 'react';\r\nimport styles from '../Modal/Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    closeModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.Overlay} onClick={this.props.closeModal}>\r\n        <div className={styles.Modal}>\r\n          <img src={this.props.largeImageURL} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport dataApi from './components/utils/dataApi';\nimport SearchBar from './components/Searchbar/Searchbar';\nimport ImageGallery from './components/ImageGallery/ImageGallery';\nimport Button from './components/Button/Button.jsx';\nimport Notification from './components/Notification/Notification';\nimport Loader from './components/Loader/Loader';\nimport Modal from './components/Modal/Modal';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: [],\n    loading: false,\n    error: null,\n    query: '',\n    page: 1,\n    largeImageURL: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.state.data);\n\n    const prevQuery = prevState.query;\n    const nextQuery = this.state.query;\n    const prevPage = prevState.page;\n    const newPage = this.state.page;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchData();\n    }\n    if (prevPage !== newPage && prevPage !== 1) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  fetchData = () => {\n    const { query, page } = this.state;\n    this.setState({ loading: true });\n    dataApi\n      .fetchDataWithQuery(query, page)\n      .then(result =>\n        this.setState(prevState => ({\n          data: [...prevState.data, ...result],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  handleSubmit = searchQuery => {\n    this.setState({ query: searchQuery, page: 1, data: [] });\n  };\n\n  handleChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({\n      [name]: value,\n    });\n  };\n  getLargeImg = image => {\n    this.setState({\n      largeImageURL: image,\n    });\n  };\n  closeModal = () => {\n    this.setState({\n      largeImageURL: '',\n    });\n  };\n\n  render() {\n    const { data, loading, error, largeImageURL } = this.state;\n    console.log(data);\n    return (\n      <>\n        <SearchBar onSubmit={this.handleSubmit} />\n        {error && (\n          <Notification\n            message={`Oops, something went wrong: ${error.message}`}\n          />\n        )}\n        {loading && <Loader />}\n        {data.length > 0 && (\n          <ImageGallery data={data} getLargeImg={this.getLargeImg} />\n        )}\n        {data.length > 0 && !loading && <Button fetchData={this.fetchData} />}\n        {largeImageURL && (\n          <Modal largeImageURL={largeImageURL} closeModal={this.closeModal} />\n        )}\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchForm\":\"SearchForm_SearchForm__269c4\",\"SearchFormButton\":\"SearchForm_SearchFormButton__17UdW\",\"SearchFormButtonLabel\":\"SearchForm_SearchFormButtonLabel__2l3u_\",\"SearchFormInput\":\"SearchForm_SearchFormInput__3PZbT\"};"],"sourceRoot":""}